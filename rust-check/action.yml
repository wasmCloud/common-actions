name: 'Rust Check'
description: 'Runs build, test, fmt, and clippy checks on a Rust project'
inputs:
  working-directory:
    description: 'Directory to run steps in'
    required: false
    default: './'
  build-options:
    description: 'Flags to pass to `cargo build`, e.g. `--release`'
    required: false
    default: ''
  clippy-options:
    description: 'Flags to pass to `cargo clippy`, default: `--all-features`'
    required: false
    default: '--all-features'
  test-options:
    description: 'Flags to pass to `cargo test`, before the `--`'
    required: false
    default: '--verbose'
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Update rust
      run: rustup update
      shell: bash

    - name: Print versions
      run: |
        uname -a
        rustup check
        cargo --version
        rustc --version
        rustfmt --version
      shell: bash

    - name: Check formatting
      run: cargo fmt -- --check
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Run cargo build
      run: cargo build ${{ inputs.build-options }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Install clippy
      run: rustup component add clippy
      shell: bash

    - name: Run cargo clippy
      run: cargo clippy ${{ inputs.clippy-options }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Run cargo test
      run: cargo test ${{ inputs.test-options }} -- --nocapture
      shell: bash
      working-directory: ${{ inputs.working-directory }}
